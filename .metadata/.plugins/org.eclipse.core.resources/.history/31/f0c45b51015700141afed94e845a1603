//============================================================================
// Name        : iotdk-cpp-template.cpp
// Author      : Intel Corporation
// Version     :
// Copyright   : 
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include "mraa.hpp"
#include <curl/curl.h>
#include <curl/easy.h>
using namespace std;

int httprequest();
static size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream) {
	if (ptr)
		int written = printf("recieved %i bytes", size);
	return size;
}

int main() {
	curl_global_init(CURL_GLOBAL_ALL);
	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!
	httprequest();
	return 0;
}

CURL *curl_handle;
CURLcode res;

int httprequest() {
	curl_handle = curl_easy_init();
	if (curl_handle) {
		printf("curlhandle starting request\n");
		curl_easy_setopt(curl_handle, CURLOPT_URL, "http://146.0.40.96/balconygardener/service.php?action=sensors");
		/* we want the body be written to this file handle instead of stdout */
		curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);
		curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, write_data);
		curl_easy_setopt(curl_handle, CURLOPT_WRITEDATA, "Data");
		curl_easy_setopt(curl_handle, CURLOPT_HEADERDATA, NULL);

		res = curl_easy_perform(curl_handle);
		if (res != CURLE_OK)
			fprintf(stderr, "curl_easy_perform() failed: %s\n",
					curl_easy_strerror(res));

		/* always cleanup */
		curl_easy_cleanup(curl_handle);
	}
	return 0;
}

