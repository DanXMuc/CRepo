/*
 * Service.cpp
 *
 *  Created on: Oct 18, 2014
 *      Author: Lars
 */

#include "Service.h"



Service::Service()
	: curl_handle(NULL)
{
	curl_handle = curl_easy_init();
}

Service::~Service() {
	  /* cleanup curl stuff */
	  curl_easy_cleanup(curl_handle);
}

void Service::informPlantWatered(int duration) const
{
	  curl_global_init(CURL_GLOBAL_ALL);

	  char* url = new char[256];

	  snprintf(url, 256, "http://146.0.40.96/balconygardener/service.php?action=infoPlantWatered&duration=%d", duration);

	  /* set URL to get */
	  curl_easy_setopt(curl_handle, CURLOPT_URL, url);

	  /* no progress meter please */
	  curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);

	  /* get it! */
	  curl_easy_perform(curl_handle);
}

void Service::sendSensorData(const std::string& sensorName, double value) const
{
	  curl_global_init(CURL_GLOBAL_ALL);

	  char* url = new char[256];

	  snprintf(url, 256, "http://146.0.40.96/balconygardener/service.php?action=insertSensorData&sensorName=%s&value=%.3f", sensorName.c_str(), value);

	  /* set URL to get */
	  curl_easy_setopt(curl_handle, CURLOPT_URL, url);

	  /* no progress meter please */
	  curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);

	  /* get it! */
	  curl_easy_perform(curl_handle);
}

void Service::readServerData(){
char* url = new char[256];
static const char *headerfilename = "head.out";
  FILE *headerfile;
  static const char *bodyfilename = "body.out";
  FILE *bodyfile;

	  snprintf(url, 256, "http://146.0.40.96/balconygardener/service.php?action=shouldWater");

	  /* set URL to get */
	  curl_easy_setopt(curl_handle, CURLOPT_URL, url);

	  /* no progress meter please */
	  curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);
	  /* send all data to this function  */
	    curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, write_data);

	    /* open the files */
	    headerfile = fopen(headerfilename,"wb");
	    if (headerfile == NULL) {
	      curl_easy_cleanup(curl_handle);
	    }
	    bodyfile = fopen(bodyfilename,"wb");
	    if (bodyfile == NULL) {
	      curl_easy_cleanup(curl_handle);
	    }

	    /* we want the headers be written to this file handle */
	    curl_easy_setopt(curl_handle,   CURLOPT_HEADERDATA, headerfile);

	    /* we want the body be written to this file handle instead of stdout */
	    curl_easy_setopt(curl_handle,   CURLOPT_WRITEDATA, bodyfile);

	    /* get it! */
	    curl_easy_perform(curl_handle);

	    /* close the header file */
	    fclose(headerfile);

	    /* close the body file */
	    fclose(bodyfile);


}
