//============================================================================
// Name        : iotdk-cpp-template.cpp
// Author      : Intel Corporation
// Version     :
// Copyright   : 
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include "mraa.hpp"
#include <curl/curl.h>
#include <curl/easy.h>
using namespace std;

int httprequest();
static size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream)
{
  int written = fwrite(ptr, size, nmemb, (FILE *)stream);
  return written;
}

int main() {
	curl_global_init(CURL_GLOBAL_ALL);
	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!
	httprequest();
	return 0;
}

CURL *curl_handle;
CURLcode res;

int httprequest() {
	CURL *curl_handle;
	  static const char *headerfilename = "head.out";
	  FILE *headerfile;
	  static const char *bodyfilename = "body.out";
	  FILE *bodyfile;

	  curl_global_init(CURL_GLOBAL_ALL);

	  /* init the curl session */
	  curl_handle = curl_easy_init();

	  /* set URL to get */
	  curl_easy_setopt(curl_handle, CURLOPT_URL, "http://146.0.40.96/balconygardener/service.php?action=infoPlantWatered");

	  /* no progress meter please */
	  curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);

	  /* send all data to this function  */
	  curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, write_data);

	  /* open the files */
	  headerfile = fopen(headerfilename,"wb");
	  if (headerfile == NULL) {
	    curl_easy_cleanup(curl_handle);
	    return -1;
	  }
	  bodyfile = fopen(bodyfilename,"wb");
	  if (bodyfile == NULL) {
	    curl_easy_cleanup(curl_handle);
	    return -1;
	  }

	  /* we want the headers be written to this file handle */
	  curl_easy_setopt(curl_handle,   CURLOPT_HEADERDATA, headerfile);

	  /* we want the body be written to this file handle instead of stdout */
	  curl_easy_setopt(curl_handle,   CURLOPT_WRITEDATA, bodyfile);

	  /* get it! */
	  curl_easy_perform(curl_handle);

	  /* close the header file */
	  fclose(headerfile);

	  /* close the body file */
	  fclose(bodyfile);

	  /* cleanup curl stuff */
	  curl_easy_cleanup(curl_handle);

	  return 0;
	}

